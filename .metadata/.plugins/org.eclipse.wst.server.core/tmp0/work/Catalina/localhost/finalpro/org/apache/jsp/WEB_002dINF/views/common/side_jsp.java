/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-04-12 02:36:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class side_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/C:/Users/lyj/finally_workSpace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/finalpro/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1708193184989L));
    _jspx_dependants.put("jar:file:/C:/Users/lyj/finally_workSpace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/finalpro/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/Users/lyj/finally_workSpace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/finalpro/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/chart.js@2.8.0\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("	  // 카테고리 이름을 클릭하면 실행될 함수를 모든 카테고리 이름에 할당합니다.\r\n");
      out.write("	  document.querySelectorAll('.category-item > span').forEach(function(categoryName) {\r\n");
      out.write("	    categoryName.addEventListener('click', function() {\r\n");
      out.write("	      // 클릭된 카테고리 이름 바로 다음 요소를 찾습니다 (subcategory 리스트).\r\n");
      out.write("	      var subcategory = this.nextElementSibling;\r\n");
      out.write("	      \r\n");
      out.write("	      // 'visible' 클래스를 토글합니다. 클래스가 있으면 제거하고 없으면 추가합니다.\r\n");
      out.write("	      if (subcategory.classList.contains('hidden')) {\r\n");
      out.write("	        subcategory.classList.remove('hidden');\r\n");
      out.write("	        subcategory.classList.add('visible');\r\n");
      out.write("	      } else {\r\n");
      out.write("	        subcategory.classList.remove('visible');\r\n");
      out.write("	        subcategory.classList.add('hidden');\r\n");
      out.write("	      }\r\n");
      out.write("	    });\r\n");
      out.write("	  });\r\n");
      out.write("	});\r\n");
      out.write(" </script>\r\n");
      out.write(" \r\n");
      out.write(" <!-- 사이드 바 숨김/나타내기 -->\r\n");
      out.write(" <script>\r\n");
      out.write(" document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("	  var brandInput = document.getElementById('brandInput');\r\n");
      out.write("	  var btn = document.querySelector('.btn_show');\r\n");
      out.write("	  var sidebar = document.querySelector('.sidebar');\r\n");
      out.write("\r\n");
      out.write("	  btn.addEventListener('click', function() {\r\n");
      out.write("	    \r\n");
      out.write("	    if (sidebar.style.display === 'none' || sidebar.style.display === '') {\r\n");
      out.write("	      sidebar.style.display = 'block'; \r\n");
      out.write("	    } else {\r\n");
      out.write("	      sidebar.style.display = 'none'; \r\n");
      out.write("	    }\r\n");
      out.write("	  });\r\n");
      out.write("	// 브랜드명 입력 필드 이벤트 리스너 추가\r\n");
      out.write("      brandInput.addEventListener('input', function() {\r\n");
      out.write("          var searchText = brandInput.value; // 입력 필드의 값\r\n");
      out.write("          listBrand(searchText); // 입력 값에 기반한 브랜드 리스트 조회\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("      // 페이지 로드 시 브랜드 리스트 초기 조회\r\n");
      out.write("      listBrand('');\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 품목/브랜드 선택시 해당 항목 나오게 하기 -->\r\n");
      out.write("<script>\r\n");
      out.write("document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("  // Product List and Brand List elements\r\n");
      out.write("  var productList = document.querySelector('.product_List');\r\n");
      out.write("  var brandList = document.querySelector('.brand_list');\r\n");
      out.write("\r\n");
      out.write("  // Buttons\r\n");
      out.write("  var productButton = document.querySelector('.product_button');\r\n");
      out.write("  var brandButton = document.querySelector('.brand_button');\r\n");
      out.write("\r\n");
      out.write("  // Event listener for the Product button\r\n");
      out.write("  productButton.addEventListener('click', function() {\r\n");
      out.write("    productList.style.display = 'block'; // Show product list\r\n");
      out.write("    brandList.style.display = 'none'; // Hide brand list\r\n");
      out.write("    productButton.style.backgroundColor = '#e9e9e9'; // Highlight product button\r\n");
      out.write("    brandButton.style.backgroundColor = 'white'; // Reset brand button\r\n");
      out.write("  });\r\n");
      out.write("\r\n");
      out.write("  // Event listener for the Brand button\r\n");
      out.write("  brandButton.addEventListener('click', function() {\r\n");
      out.write("    productList.style.display = 'none'; // Hide product list\r\n");
      out.write("    brandList.style.display = 'block'; // Show brand list\r\n");
      out.write("    brandButton.style.backgroundColor = '#e9e9e9'; // Highlight brand button\r\n");
      out.write("    productButton.style.backgroundColor = 'white'; // Reset product button\r\n");
      out.write("  });\r\n");
      out.write("\r\n");
      out.write("  // Initialize with the Product List shown\r\n");
      out.write("  productButton.click();\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("		window.onload = function() {\r\n");
      out.write("			listBrand();\r\n");
      out.write("	    };\r\n");
      out.write("		\r\n");
      out.write("	    // 입력 값에 따라 브랜드 리스트를 조회하고 화면에 표시하는 함수\r\n");
      out.write("	    function listBrand(searchText) {\r\n");
      out.write("	        $.ajax({\r\n");
      out.write("	            url: \"/finalpro/common/listBrand2.do\",\r\n");
      out.write("	            method: 'POST',\r\n");
      out.write("	            contentType: 'application/json',\r\n");
      out.write("	            data: JSON.stringify({ firstLetter: searchText }), // 검색 텍스트를 기반으로 요청 데이터 구성\r\n");
      out.write("	            success: function(data) {\r\n");
      out.write("	                var brandList = data.brandList.slice(0, 20); // 처음 20개의 항목만 선택\r\n");
      out.write("	                var brandListUl = document.getElementById('brandlistslide');\r\n");
      out.write("	                brandListUl.innerHTML = ''; // 기존 리스트 초기화\r\n");
      out.write("\r\n");
      out.write("	                brandList.forEach(function(brand) {\r\n");
      out.write("	                    var listItem = document.createElement('li');\r\n");
      out.write("	                    listItem.className = 'listItem';\r\n");
      out.write("\r\n");
      out.write("	                    var brandLink = document.createElement('a');\r\n");
      out.write("	                    // 클릭 시 지정된 URL로 이동하도록 href 속성 설정\r\n");
      out.write("	                    brandLink.href = '/finalpro/brand/brandList.do?brand=' + (brand.brand);\r\n");
      out.write("	                    brandLink.className = 'command-brand-link';\r\n");
      out.write("\r\n");
      out.write("	                    var titleSpan = document.createElement('span');\r\n");
      out.write("	                    titleSpan.className = 'title';\r\n");
      out.write("\r\n");
      out.write("	                    var engSpan = document.createElement('span');\r\n");
      out.write("	                    engSpan.className = 'eng';\r\n");
      out.write("	                    engSpan.textContent = brand.brandEng; // 영어 브랜드명 설정\r\n");
      out.write("\r\n");
      out.write("	                    var korSpan = document.createElement('span');\r\n");
      out.write("	                    korSpan.className = 'kor';\r\n");
      out.write("	                    korSpan.textContent = brand.brand; // 한글 브랜드명 설정\r\n");
      out.write("	                    \r\n");
      out.write("	                 	// engSpan과 korSpan을 감싸는 div 생성\r\n");
      out.write("	                    var engDiv = document.createElement('div');\r\n");
      out.write("	                    engDiv.className = 'eng-wrap';\r\n");
      out.write("	                    engDiv.appendChild(engSpan); // 영어 브랜드명을 engDiv에 추가\r\n");
      out.write("\r\n");
      out.write("	                    var korDiv = document.createElement('div');\r\n");
      out.write("	                    korDiv.className = 'kor-wrap';\r\n");
      out.write("	                    korDiv.appendChild(korSpan); // 한글 브랜드명을 korDiv에 추가\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	                    var replyCntSpan = document.createElement('span');\r\n");
      out.write("	                    replyCntSpan.className = 'replyCnt parentheses';\r\n");
      out.write("	                    replyCntSpan.textContent = '(' + brand.productCount + ')'; \r\n");
      out.write("\r\n");
      out.write("	                    // 수정된 부분: engDiv와 korDiv를 titleSpan에 추가\r\n");
      out.write("	                    titleSpan.appendChild(engDiv);\r\n");
      out.write("	                    titleSpan.appendChild(korDiv);\r\n");
      out.write("	                    korDiv.appendChild(replyCntSpan); // 상품 수\r\n");
      out.write("	                    brandLink.appendChild(titleSpan);\r\n");
      out.write("	                    listItem.appendChild(brandLink);\r\n");
      out.write("	                    brandListUl.appendChild(listItem);\r\n");
      out.write("	                });\r\n");
      out.write("	            },\r\n");
      out.write("	            error: function(error) {\r\n");
      out.write("	                console.error('Error:', error);\r\n");
      out.write("	            }\r\n");
      out.write("	        });\r\n");
      out.write("	    }\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("<body>\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"sidebar\">\r\n");
      out.write("                <div class=\"select_Box\">\r\n");
      out.write("                	<button class=\"product_button\">품목</button>\r\n");
      out.write("                	<button class=\"brand_button\">브랜드</button>\r\n");
      out.write("                </div>\r\n");
      out.write("                <ul class=\"product_List\">\r\n");
      out.write("				    <li class=\"category-item\">\r\n");
      out.write("				      <span>아우터</span>\r\n");
      out.write("				      <ul class=\"subcategory hidden\">\r\n");
      out.write("				       <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/listProducts.do?subCategory=coat\">코트</a></li>\r\n");
      out.write("				        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/listProducts.do?subCategory=heavyOuter\">패딩</a></li>\r\n");
      out.write("				        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/listProducts.do?subCategory=cardigan\">가디건</a></li>\r\n");
      out.write("				        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/listProducts.do?subCategory=fleece\">후리스</a></li>\r\n");
      out.write("				        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/listProducts.do?subCategory=jumper\">재킷</a></li>\r\n");
      out.write("				        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/listProducts.do?subCategory=outerOthers\">기타</a></li>\r\n");
      out.write("				      </ul>\r\n");
      out.write("				    </li>\r\n");
      out.write("				    <li class=\"category-item\">\r\n");
      out.write("				      <span>상의</span>\r\n");
      out.write("				      <ul class=\"subcategory hidden\">\r\n");
      out.write("				        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/listProducts.do?subCategory=mtom\">맨투맨</a></li>\r\n");
      out.write("				        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/listProducts.do?subCategory=hood\">후드</a></li>\r\n");
      out.write("				        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/listProducts.do?subCategory=t-shirt\">티셔츠</a></li>\r\n");
      out.write("				        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/listProducts.do?subCategory=knit\">니트</a></li>\r\n");
      out.write("				        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/listProducts.do?subCategory=shirt\">셔츠</a></li>\r\n");
      out.write("				        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/listProducts.do?subCategory=topOhters\">기타</a></li>\r\n");
      out.write("				      </ul>\r\n");
      out.write("				    </li>\r\n");
      out.write("				    <li class=\"category-item\">\r\n");
      out.write("				      <span>하의</span>\r\n");
      out.write("				      <ul class=\"subcategory hidden\">\r\n");
      out.write("				        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/listProducts.do?subCategory=jeans\">청바지</a></li>\r\n");
      out.write("				        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/listProducts.do?subCategory=slacks\">슬렉스</a></li>\r\n");
      out.write("				        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/listProducts.do?subCategory=trackPants\">츄리닝</a></li>\r\n");
      out.write("				        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/listProducts.do?subCategory=skirt\">치마</a></li>\r\n");
      out.write("				        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/listProducts.do?subCategory=shorts\">반바지</a></li>\r\n");
      out.write("				        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/listProducts.do?subCategory=pantsOthers\">기타</a></li>\r\n");
      out.write("				      </ul>\r\n");
      out.write("				    </li>\r\n");
      out.write("				    <li class=\"category-item\">\r\n");
      out.write("				      <span>신발</span>\r\n");
      out.write("				      <ul class=\"subcategory hidden\">\r\n");
      out.write("				        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/listProducts.do?subCategory=dressShoes\">구두</a></li>\r\n");
      out.write("				        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/listProducts.do?subCategory=slippers\">슬리퍼</a></li>\r\n");
      out.write("				        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/listProducts.do?subCategory=sneakers\">스니커즈</a></li>\r\n");
      out.write("				        \r\n");
      out.write("				        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/listProducts.do?subCategory=shoeOthers\">기타</a></li>\r\n");
      out.write("				      </ul>\r\n");
      out.write("				    </li>\r\n");
      out.write("				 </ul>\r\n");
      out.write("				 \r\n");
      out.write("				 \r\n");
      out.write("				 <!-- 브랜드 항목 -->\r\n");
      out.write("				 \r\n");
      out.write("				 \r\n");
      out.write("		<div class=\"brand_list\">		 \r\n");
      out.write("		 	<div class=\"searchTab tabBox\" br-data-name=\"magazine_left_tab\">\r\n");
      out.write("			   <ul class=\"brand-option-list list\">\r\n");
      out.write("			      <li class=\"listItem\">\r\n");
      out.write("			         <label class=\"spell\">브랜드명 입력 \r\n");
      out.write("					    <input type=\"text\" class=\"ui-brand-kwd\" id=\"brandInput\" >\r\n");
      out.write("					</label>\r\n");
      out.write("			         <ul class=\"letter-list\">\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyA\" ktype=\"A\">A</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyB\" ktype=\"B\">B</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyC\" ktype=\"C\">C</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyD\" ktype=\"D\">D</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyE\" ktype=\"E\">E</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyF\" ktype=\"F\">F</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyG\" ktype=\"G\">G</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyH\" ktype=\"H\">H</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyI\" ktype=\"I\">I</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyJ\" ktype=\"J\">J</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyK\" ktype=\"K\">K</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyL\" ktype=\"L\">L</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyM\" ktype=\"M\">M</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyN\" ktype=\"N\">N</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyO\" ktype=\"O\">O</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyP\" ktype=\"P\">P</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyQ\" ktype=\"Q\">Q</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyR\" ktype=\"R\">R</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyS\" ktype=\"S\">S</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyT\" ktype=\"T\">T</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyU\" ktype=\"U\">U</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyV\" ktype=\"V\">V</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyW\" ktype=\"W\">W</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyX\" ktype=\"X\">X</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyY\" ktype=\"Y\">Y</li>\r\n");
      out.write("			            <li class=\"listItem btn ui-brand-btn tyZ\" ktype=\"Z\">Z</li>\r\n");
      out.write("			         </ul>\r\n");
      out.write("			      </li>\r\n");
      out.write("			      <li class=\"listItem\">\r\n");
      out.write("			         <ul class=\"brand-list list area-list-brand\" id=\"brandlistslide\">\r\n");
      out.write("			         </ul>\r\n");
      out.write("			      </li>\r\n");
      out.write("			   </ul>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>		\r\n");
      out.write("    </div>\r\n");
      out.write("            <button type=\"button\" class=\"btn_show\">\r\n");
      out.write("				<svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30 file=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n");
      out.write("					<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 9.5H25V8.5H5V9.5ZM25 15.5H5V14.5H25V15.5ZM25 21.5H5V20.5H25V21.5Z\" fill=\"black\"></path>	 \r\n");
      out.write("				</svg>\r\n");
      out.write("			</button>\r\n");
      out.write("</body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	let letterListItems = document.querySelectorAll('.letter-list > li'); // CSS 선택자 수정\r\n");
      out.write("	\r\n");
      out.write("	letterListItems.forEach(function(item) {\r\n");
      out.write("	    item.addEventListener('click', function(event) {\r\n");
      out.write("	        var alphabet = event.target.getAttribute('ktype'); // 커스텀 데이터 속성 사용 권장\r\n");
      out.write("	        listBrand(alphabet);\r\n");
      out.write("	    });\r\n");
      out.write("	});\r\n");
      out.write("</script>	");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/common/side.jsp(8,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /WEB-INF/views/common/side.jsp(8,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/common/side.jsp(8,0) '${pageContext.request.contextPath }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }
}
