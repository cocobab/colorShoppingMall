/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-04-25 17:49:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.magazine;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class pictorialList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1708193184989L));
    _jspx_dependants.put("jar:file:/C:/Users/lyj/finally_workSpace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/finalpro/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("    \r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/finalpro/resources/css/magazineList.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- 페이지 순서 만들때는 이거 사용하면 됨 -->\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("var currentPage = 1;\r\n");
      out.write("var itemsPerPage = 9;	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function goToPage(pageNum) {\r\n");
      out.write("    currentPage = pageNum;\r\n");
      out.write("    updateItemsDisplay();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function nextPage() {\r\n");
      out.write("    var allItems = document.querySelectorAll('.pictorialInfo');\r\n");
      out.write("    var totalPages = Math.ceil(allItems.length / itemsPerPage);\r\n");
      out.write("    if (currentPage < totalPages) {\r\n");
      out.write("        currentPage++;\r\n");
      out.write("        updateItemsDisplay();\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function previousPage() {\r\n");
      out.write("    if (currentPage > 1) {\r\n");
      out.write("        currentPage--;\r\n");
      out.write("        updateItemsDisplay();\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("    updateItemsDisplay();\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("//페이지네이션 버튼을 동적으로 생성하는 함수\r\n");
      out.write("function createPaginationButtons() {\r\n");
      out.write("    var paginationContainer = document.querySelector('.paginationPictorial');\r\n");
      out.write("    var totalItems = document.querySelectorAll('.pictorialInfo').length;\r\n");
      out.write("    var totalPages = Math.ceil(totalItems / itemsPerPage);\r\n");
      out.write("\r\n");
      out.write("    // 기존 페이지네이션 버튼을 모두 제거합니다.\r\n");
      out.write("    paginationContainer.innerHTML = '';\r\n");
      out.write("\r\n");
      out.write(" // 맨 처음 페이지로 이동하는 버튼 추가\r\n");
      out.write("    if (currentPage > 1) {\r\n");
      out.write("        let firstPageButton = document.createElement('button');\r\n");
      out.write("        firstPageButton.className = 'pagination_button';\r\n");
      out.write("        firstPageButton.innerText = '<<';\r\n");
      out.write("        firstPageButton.addEventListener('click', firstPage);\r\n");
      out.write("        paginationContainer.appendChild(firstPageButton);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    if (currentPage > 1) {\r\n");
      out.write("        let prevButton = document.createElement('button');\r\n");
      out.write("        prevButton.className = 'pagination_button';\r\n");
      out.write("        prevButton.innerText = '<';\r\n");
      out.write("        prevButton.addEventListener('click', previousPage);\r\n");
      out.write("        paginationContainer.appendChild(prevButton);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    for (let i = 1; i <= totalPages; i++) {\r\n");
      out.write("        let button = document.createElement('button');\r\n");
      out.write("        button.className = 'pagination_button';\r\n");
      out.write("        button.innerText = i;\r\n");
      out.write("        if (i === currentPage) {\r\n");
      out.write("            button.classList.add('active');\r\n");
      out.write("        }\r\n");
      out.write("        button.addEventListener('click', function() {\r\n");
      out.write("            goToPage(i);\r\n");
      out.write("        });\r\n");
      out.write("        paginationContainer.appendChild(button);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    if (currentPage < totalPages) {\r\n");
      out.write("        let nextButton = document.createElement('button');\r\n");
      out.write("        nextButton.className = 'pagination_button';\r\n");
      out.write("        nextButton.innerText = '>';\r\n");
      out.write("        nextButton.addEventListener('click', nextPage);\r\n");
      out.write("        paginationContainer.appendChild(nextButton);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 맨 끝 페이지로 이동하는 버튼 추가\r\n");
      out.write("    if (currentPage < totalPages) {\r\n");
      out.write("        let lastPageButton = document.createElement('button');\r\n");
      out.write("        lastPageButton.className = 'pagination_button';\r\n");
      out.write("        lastPageButton.innerText = '>>';\r\n");
      out.write("        lastPageButton.addEventListener('click', function() {\r\n");
      out.write("            lastPage(totalPages);\r\n");
      out.write("        });\r\n");
      out.write("        paginationContainer.appendChild(lastPageButton);\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function firstPage() {\r\n");
      out.write("    currentPage = 1;\r\n");
      out.write("    updateItemsDisplay();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function lastPage(totalPages) {\r\n");
      out.write("    currentPage = totalPages;\r\n");
      out.write("    updateItemsDisplay();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("    updateItemsDisplay(); // 아이템을 업데이트하는 함수\r\n");
      out.write("    createPaginationButtons(); // 페이지네이션 버튼을 생성하는 함수\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function updateItemsDisplay() {\r\n");
      out.write("    var allItems = document.querySelectorAll('.pictorialInfo');\r\n");
      out.write("    var startItem = (currentPage - 1) * itemsPerPage;\r\n");
      out.write("    var endItem = startItem + itemsPerPage;\r\n");
      out.write("\r\n");
      out.write("    allItems.forEach(function(item, index) {\r\n");
      out.write("        if (index >= startItem && index < endItem) {\r\n");
      out.write("            item.style.display = 'block'; // 현재 페이지 아이템만 보여주기\r\n");
      out.write("        } else {\r\n");
      out.write("            item.style.display = 'none'; // 다른 페이지 아이템 숨기기\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    createPaginationButtons(); // 페이지네이션 버튼 업데이트\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!-- 브랜드 가 들어왔을 때 페이지 -->\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("function goToPage2(pageNum) {\r\n");
      out.write("    currentPage = pageNum;\r\n");
      out.write("    updateItemsDisplay2();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function nextPage2() {\r\n");
      out.write("    var allItems = document.querySelectorAll('.pictorialInfo');\r\n");
      out.write("    var totalPages = Math.ceil(allItems.length / itemsPerPage);\r\n");
      out.write("    if (currentPage < totalPages) {\r\n");
      out.write("        currentPage++;\r\n");
      out.write("        updateItemsDisplay2();\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function previousPag2e() {\r\n");
      out.write("    if (currentPage > 1) {\r\n");
      out.write("        currentPage--;\r\n");
      out.write("        updateItemsDisplay2();\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("    updateItemsDisplay2();\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("//페이지네이션 버튼을 동적으로 생성하는 함수\r\n");
      out.write("function createPaginationButtons2() {\r\n");
      out.write("    var paginationContainer = document.querySelector('.paginationPictorial2');\r\n");
      out.write("    var totalItems = document.querySelectorAll('.pictorialInfo').length;\r\n");
      out.write("    var totalPages = Math.ceil(totalItems / itemsPerPage);\r\n");
      out.write("\r\n");
      out.write("    // 기존 페이지네이션 버튼을 모두 제거합니다.\r\n");
      out.write("    paginationContainer.innerHTML = '';\r\n");
      out.write("\r\n");
      out.write(" // 맨 처음 페이지로 이동하는 버튼 추가\r\n");
      out.write("    if (currentPage > 1) {\r\n");
      out.write("        let firstPageButton = document.createElement('button');\r\n");
      out.write("        firstPageButton.className = 'pagination_button';\r\n");
      out.write("        firstPageButton.innerText = '<<';\r\n");
      out.write("        firstPageButton.addEventListener('click', firstPage);\r\n");
      out.write("        paginationContainer.appendChild(firstPageButton);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    if (currentPage > 1) {\r\n");
      out.write("        let prevButton = document.createElement('button');\r\n");
      out.write("        prevButton.className = 'pagination_button';\r\n");
      out.write("        prevButton.innerText = '<';\r\n");
      out.write("        prevButton.addEventListener('click', previousPage);\r\n");
      out.write("        paginationContainer.appendChild(prevButton);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    for (let i = 1; i <= totalPages; i++) {\r\n");
      out.write("        let button = document.createElement('button');\r\n");
      out.write("        button.className = 'pagination_button';\r\n");
      out.write("        button.innerText = i;\r\n");
      out.write("        if (i === currentPage) {\r\n");
      out.write("            button.classList.add('active');\r\n");
      out.write("        }\r\n");
      out.write("        button.addEventListener('click', function() {\r\n");
      out.write("            goToPage(i);\r\n");
      out.write("        });\r\n");
      out.write("        paginationContainer.appendChild(button);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    if (currentPage < totalPages) {\r\n");
      out.write("        let nextButton = document.createElement('button');\r\n");
      out.write("        nextButton.className = 'pagination_button';\r\n");
      out.write("        nextButton.innerText = '>';\r\n");
      out.write("        nextButton.addEventListener('click', nextPage);\r\n");
      out.write("        paginationContainer.appendChild(nextButton);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 맨 끝 페이지로 이동하는 버튼 추가\r\n");
      out.write("    if (currentPage < totalPages) {\r\n");
      out.write("        let lastPageButton = document.createElement('button');\r\n");
      out.write("        lastPageButton.className = 'pagination_button';\r\n");
      out.write("        lastPageButton.innerText = '>>';\r\n");
      out.write("        lastPageButton.addEventListener('click', function() {\r\n");
      out.write("            lastPage2(totalPages);\r\n");
      out.write("        });\r\n");
      out.write("        paginationContainer.appendChild(lastPageButton);\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function firstPage2() {\r\n");
      out.write("    currentPage = 1;\r\n");
      out.write("    updateItemsDisplay();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function lastPage2(totalPages) {\r\n");
      out.write("    currentPage = totalPages;\r\n");
      out.write("    updateItemsDisplay();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("    updateItemsDisplay2(); // 아이템을 업데이트하는 함수\r\n");
      out.write("    createPaginationButtons2(); // 페이지네이션 버튼을 생성하는 함수\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function updateItemsDisplay2() {\r\n");
      out.write("    var allItems = document.querySelectorAll('.pictorialInfo');\r\n");
      out.write("    var startItem = (currentPage - 1) * itemsPerPage;\r\n");
      out.write("    var endItem = startItem + itemsPerPage;\r\n");
      out.write("\r\n");
      out.write("    allItems.forEach(function(item, index) {\r\n");
      out.write("        if (index >= startItem && index < endItem) {\r\n");
      out.write("            item.style.display = 'block'; // 현재 페이지 아이템만 보여주기\r\n");
      out.write("        } else {\r\n");
      out.write("            item.style.display = 'none'; // 다른 페이지 아이템 숨기기\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    createPaginationButtons2(); // 페이지네이션 버튼 업데이트\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("		\r\n");
      out.write("</body>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/magazine/pictorialList.jsp(6,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /WEB-INF/views/magazine/pictorialList.jsp(6,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/magazine/pictorialList.jsp(6,0) '${pageContext.request.contextPath }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f1_reused = false;
    try {
      _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f1.setParent(null);
      // /WEB-INF/views/magazine/pictorialList.jsp(8,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setVar("pictorialAllList");
      // /WEB-INF/views/magazine/pictorialList.jsp(8,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/magazine/pictorialList.jsp(8,0) '${pictorialMap.pictorialList }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pictorialMap.pictorialList }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
      if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
      _jspx_th_c_005fset_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f2 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f2_reused = false;
    try {
      _jspx_th_c_005fset_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f2.setParent(null);
      // /WEB-INF/views/magazine/pictorialList.jsp(10,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f2.setVar("pictorialALlListBrand");
      // /WEB-INF/views/magazine/pictorialList.jsp(10,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f2.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/magazine/pictorialList.jsp(10,0) '${pictorialMap.pictorialListBrand }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pictorialMap.pictorialListBrand }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f2 = _jspx_th_c_005fset_005f2.doStartTag();
      if (_jspx_th_c_005fset_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f2);
      _jspx_th_c_005fset_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/magazine/pictorialList.jsp(281,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty pictorialAllList}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("		<div class=\"magazine_path\">\r\n");
          out.write("			<h1>Magazine</h1><p> > Pictorial</p> <span>다양한 브랜드의 컬렉션을 집중 소개하며 합리적인 쇼핑에 도움을 줄 유용한 가이드를 담은 콘텐츠를 제공합니다.</span>\r\n");
          out.write("		</div>\r\n");
          out.write("		\r\n");
          out.write("		<div class=\"pictorialWrap\">\r\n");
          out.write("			<!-- 페이지 버튼 -->	  \r\n");
          out.write("		 	<div class=\"paginationPictorial\"></div>\r\n");
          out.write("			\r\n");
          out.write("			\r\n");
          out.write("			\r\n");
          out.write("			<div class=\"pictorialGrid\">\r\n");
          out.write("				");
          if (_jspx_meth_c_005fforEach_005f0(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("			</div>\r\n");
          out.write("		\r\n");
          out.write("		</div>\r\n");
          out.write("	");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /WEB-INF/views/magazine/pictorialList.jsp(293,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("pal");
      // /WEB-INF/views/magazine/pictorialList.jsp(293,4) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/magazine/pictorialList.jsp(293,4) '${pictorialAllList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pictorialAllList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/magazine/pictorialList.jsp(293,4) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("status");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("					    <div class=\"pictorialInfo\" id=\"pal");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${status.index + 1}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("					        <a href=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("/magazine/pictorialInfo.do?magazineNo=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pal.magazineNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("					            <img src=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("/download.do?imageFileName=1.jpg&magazineNo=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pal.magazineNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("&path=pictorial\" id=\"preview");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${status.index + 1}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("					            <h3>화보 | ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pal.title }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</h3>\r\n");
            out.write("					            <p>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pal.brand}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</p>\r\n");
            out.write("					            <p>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pal.subTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</p>\r\n");
            out.write("					        </a>\r\n");
            out.write("					    </div>\r\n");
            out.write("				");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/magazine/pictorialList.jsp(310,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty pictorialALlListBrand}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("		<div class=\"magazine_path\">\r\n");
          out.write("			<h1>Magazine</h1><p> > Pictorial</p> <span>다양한 브랜드의 컬렉션을 집중 소개하며 합리적인 쇼핑에 도움을 줄 유용한 가이드를 담은 콘텐츠를 제공합니다.</span>\r\n");
          out.write("		</div>\r\n");
          out.write("		\r\n");
          out.write("		<div class=\"pictorialWrap2\">\r\n");
          out.write("			<!-- 페이지 버튼 -->	  \r\n");
          out.write("		 	<div class=\"paginationPictorial2\"></div>\r\n");
          out.write("			\r\n");
          out.write("			\r\n");
          out.write("			\r\n");
          out.write("			<div class=\"pictorialGrid\">\r\n");
          out.write("				");
          if (_jspx_meth_c_005fforEach_005f1(_jspx_th_c_005fif_005f1, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("			</div>\r\n");
          out.write("		\r\n");
          out.write("		</div>\r\n");
          out.write("	");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
      // /WEB-INF/views/magazine/pictorialList.jsp(322,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("palB");
      // /WEB-INF/views/magazine/pictorialList.jsp(322,4) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/magazine/pictorialList.jsp(322,4) '${pictorialALlListBrand}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pictorialALlListBrand}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/magazine/pictorialList.jsp(322,4) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVarStatus("status");
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("					    <div class=\"pictorialInfo\" id=\"palB");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${status.index + 1}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("					        <a href=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("/magazine/pictorialInfo.do?magazineNo=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${palB.magazineNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("					            <img src=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("/download.do?imageFileName=1.jpg&magazineNo=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${palB.magazineNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("&path=pictorial\" id=\"preview");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${status.index + 1}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("					            <h3>화보 | ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${palB.title }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</h3>\r\n");
            out.write("					            <p>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${palB.brand}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</p>\r\n");
            out.write("					            <p>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${palB.subTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</p>\r\n");
            out.write("					        </a>\r\n");
            out.write("					    </div>\r\n");
            out.write("				");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }
}
