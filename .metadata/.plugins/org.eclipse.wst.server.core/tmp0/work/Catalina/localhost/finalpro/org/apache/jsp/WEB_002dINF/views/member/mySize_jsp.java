/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-04-13 07:17:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mySize_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1708193184989L));
    _jspx_dependants.put("jar:file:/C:/Users/lyj/finally_workSpace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/finalpro/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    ");

    request.setCharacterEncoding("utf-8");
    
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<link rel =\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/myPage.css\">\r\n");
      out.write("<link rel =\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/mySize.css\">\r\n");
      out.write("\r\n");
      out.write("<title>사이즈 및 피부톤 설정</title>\r\n");
      out.write("<style>\r\n");
      out.write("  .focus { border: 2px solid #555; }\r\n");
      out.write("</style>\r\n");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write(".line{\r\n");
      out.write("border-bottom: 3px solid #918d8d;\r\n");
      out.write("margin-bottom: 40px;\r\n");
      out.write("margin-top: -22px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".line2{\r\n");
      out.write("border-bottom: 3px solid #918d8d;;\r\n");
      out.write("margin-bottom: 40px;\r\n");
      out.write("margin-top: -22px;\r\n");
      out.write("}\r\n");
      out.write(".skin{\r\n");
      out.write("margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".physical{\r\n");
      out.write("margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<link rel =\"stylesheet\" href=\"/finalpro/resources/css/mySize.css\">\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"main\">\r\n");
      out.write("		<div class=\"sidebar\">\r\n");
      out.write("				<h1>마이페이지</h1>\r\n");
      out.write("				<h3>쇼핑 정보</h3>\r\n");
      out.write("					<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/mypage/orderList.do\">구매 내역</a>\r\n");
      out.write("					<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/mypage/like.do\">좋아요 누른 상품</a>\r\n");
      out.write("					<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/mypage/recentProduct.do\">최근 본 상품</a>\r\n");
      out.write("				<h3>내 정보</h3>\r\n");
      out.write("					<button type=\"button\" onclick=\"sendMemberDetail()\">내정보 관리</button>\r\n");
      out.write("					<br>\r\n");
      out.write("					<button type=\"button\" onclick=\"sendPostAddress()\">주소록</button>\r\n");
      out.write("					<br>\r\n");
      out.write("					<button type=\"button\" onclick=\"sendMySize()\">나의 사이즈</button>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("		    <div class=\"main-content1\">\r\n");
      out.write("		        <h2 class=\"title\">내 사이즈 / 뷰티 정보</h2>\r\n");
      out.write("		        <form method=\"post\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/updateMySize.do\">\r\n");
      out.write("		        <div class=\"btn-container\">\r\n");
      out.write("		            <button type=\"button\" class=\"btn1\">체형 피부정보</button>\r\n");
      out.write("		            <button type=\"button\" class=\"btn2\" onclick=\"sendPostRequest()\">사이즈 추천</button>\r\n");
      out.write("		        </div>\r\n");
      out.write("		        <div class = \"line\"> </div>\r\n");
      out.write("		         <div>\r\n");
      out.write("		    		<input type=\"hidden\" name=\"id\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"> \r\n");
      out.write("				</div>\r\n");
      out.write("		        \r\n");
      out.write("		        <div class=\"section1\">\r\n");
      out.write("		        	<label class=\"physical\"><h3>신체 사이즈</h3></label>\r\n");
      out.write("		            <div class=\"unit-input\">\r\n");
      out.write("		                <label for=\"height\" class=\"label-inline\">키</label>\r\n");
      out.write("		                <input class=\"height\" type=\"number\" id=\"height\" name=\"height\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.height }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"cm\">\r\n");
      out.write("		                <span class=\"unit-label\">cm</span>\r\n");
      out.write("		            </div>\r\n");
      out.write("		        </div>\r\n");
      out.write("		        \r\n");
      out.write("		\r\n");
      out.write("		        \r\n");
      out.write("		        <div class=\"section2\">\r\n");
      out.write("		            <div class=\"unit-input\">\r\n");
      out.write("		                <label for=\"weight\" class=\"label-inline\">몸무게</label>\r\n");
      out.write("		                <input class=\"weight\" type=\"number\" id=\"weight\" name=\"weight\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.weight }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"kg\">\r\n");
      out.write("		                <span class=\"unit-label\">kg</span>\r\n");
      out.write("		            </div>\r\n");
      out.write("		        </div>\r\n");
      out.write("		        \r\n");
      out.write("		        <div class = \"line2\"> </div>\r\n");
      out.write("		\r\n");
      out.write("		        <div class=\"section3\">\r\n");
      out.write("		            <label class=\"skin\"><h3>피부톤</h3></label>\r\n");
      out.write("		            <div class=\"radio-group\">\r\n");
      out.write("		                <input type=\"radio\" id=\"warmSpring\" name=\"personalColor\" value=\"warmSpring\">\r\n");
      out.write("		                <label for=\"warmSpring\">봄웜톤</label>\r\n");
      out.write("		                <input type=\"radio\" id=\"coolSummer\" name=\"personalColor\" value=\"coolSummer\">\r\n");
      out.write("		                <label for=\"coolSummer\">여름쿨톤</label>\r\n");
      out.write("		                <input type=\"radio\" id=\"warmAutumn\" name=\"personalColor\" value=\"warmAutumn\">\r\n");
      out.write("		                <label for=\"warmAutumn\">가을웜톤</label>\r\n");
      out.write("		                <input type=\"radio\" id=\"coolWinter\" name=\"personalColor\" value=\"coolWinter\">\r\n");
      out.write("		                <label for=\"coolWinter\">겨울쿨톤</label>\r\n");
      out.write("		            </div>\r\n");
      out.write("		        </div>\r\n");
      out.write("		\r\n");
      out.write("		        <div class=\"btn-container\">\r\n");
      out.write("		            <button type=\"submit\" class=\"btn\">저장</button>\r\n");
      out.write("		        </div>\r\n");
      out.write("		        </form>\r\n");
      out.write("		    </div>\r\n");
      out.write("	</div>\r\n");
      out.write("    <script>\r\n");
      out.write("    \r\n");
      out.write("    document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("        \r\n");
      out.write("        var savedPersonalColor = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.personalColor}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"; \r\n");
      out.write("        \r\n");
      out.write("        if(savedPersonalColor) {\r\n");
      out.write("            var personalColorInput = document.getElementById(savedPersonalColor);\r\n");
      out.write("            if (personalColorInput) {\r\n");
      out.write("                personalColorInput.checked = true;\r\n");
      out.write("             \r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("      \r\n");
      out.write("        var skinToneButtons = document.querySelectorAll('.radio-group input[type=\"radio\"]');\r\n");
      out.write("        skinToneButtons.forEach(function(button) {\r\n");
      out.write("            button.addEventListener('change', function() {\r\n");
      out.write("               \r\n");
      out.write("                skinToneButtons.forEach(function(btn) {\r\n");
      out.write("                    btn.nextSibling.classList.remove('focused');\r\n");
      out.write("                });\r\n");
      out.write("                \r\n");
      out.write("                this.nextSibling.classList.add('focused');\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("        \r\n");
      out.write("        function sendPostRequest() {\r\n");
      out.write("           \r\n");
      out.write("            var form = document.createElement(\"form\");\r\n");
      out.write("            form.setAttribute(\"method\", \"post\");\r\n");
      out.write("            form.setAttribute(\"action\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/sizeRecommend.do\");\r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("            var idField = document.createElement(\"input\");\r\n");
      out.write("            idField.setAttribute(\"type\", \"hidden\");\r\n");
      out.write("            idField.setAttribute(\"name\", \"id\");\r\n");
      out.write("            idField.setAttribute(\"value\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"); \r\n");
      out.write("            form.appendChild(idField);\r\n");
      out.write("\r\n");
      out.write("          \r\n");
      out.write("            document.body.appendChild(form);\r\n");
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            form.submit();\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function sendMemberDetail() {\r\n");
      out.write("            // 폼 생성\r\n");
      out.write("            var form = document.createElement(\"form\");\r\n");
      out.write("            form.setAttribute(\"method\", \"post\");\r\n");
      out.write("            form.setAttribute(\"action\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/memberDetail.do\");\r\n");
      out.write("\r\n");
      out.write("            // memberId를 위한 input 요소 생성\r\n");
      out.write("            var idField = document.createElement(\"input\");\r\n");
      out.write("            idField.setAttribute(\"type\", \"hidden\");\r\n");
      out.write("            idField.setAttribute(\"name\", \"id\");\r\n");
      out.write("            idField.setAttribute(\"value\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"); // 여기서 member.id는 서버 사이드 코드에서 제공되어야 합니다.\r\n");
      out.write("            form.appendChild(idField);\r\n");
      out.write("\r\n");
      out.write("            // 생성된 폼을 문서에 추가\r\n");
      out.write("            document.body.appendChild(form);\r\n");
      out.write("\r\n");
      out.write("            // 폼 제출\r\n");
      out.write("            form.submit();\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function sendPostAddress() {\r\n");
      out.write("            // 폼 생성\r\n");
      out.write("            var form = document.createElement(\"form\");\r\n");
      out.write("            form.setAttribute(\"method\", \"post\");\r\n");
      out.write("            form.setAttribute(\"action\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/addressDetailForm.do\");\r\n");
      out.write("\r\n");
      out.write("            // memberId를 위한 input 요소 생성\r\n");
      out.write("            var idField = document.createElement(\"input\");\r\n");
      out.write("            idField.setAttribute(\"type\", \"hidden\");\r\n");
      out.write("            idField.setAttribute(\"name\", \"id\");\r\n");
      out.write("            idField.setAttribute(\"value\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"); // 여기서 member.id는 서버 사이드 코드에서 제공되어야 합니다.\r\n");
      out.write("            form.appendChild(idField);\r\n");
      out.write("\r\n");
      out.write("            // 생성된 폼을 문서에 추가\r\n");
      out.write("            document.body.appendChild(form);\r\n");
      out.write("\r\n");
      out.write("            // 폼 제출\r\n");
      out.write("            form.submit();\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function sendMySize() {\r\n");
      out.write("            // 폼 생성\r\n");
      out.write("            var form = document.createElement(\"form\");\r\n");
      out.write("            form.setAttribute(\"method\", \"post\");\r\n");
      out.write("            form.setAttribute(\"action\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/mySize.do\");\r\n");
      out.write("\r\n");
      out.write("            // memberId를 위한 input 요소 생성\r\n");
      out.write("            var idField = document.createElement(\"input\");\r\n");
      out.write("            idField.setAttribute(\"type\", \"hidden\");\r\n");
      out.write("            idField.setAttribute(\"name\", \"id\");\r\n");
      out.write("            idField.setAttribute(\"value\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${myPage.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"); // 여기서 member.id는 서버 사이드 코드에서 제공되어야 합니다.\r\n");
      out.write("            form.appendChild(idField);\r\n");
      out.write("\r\n");
      out.write("            // 생성된 폼을 문서에 추가\r\n");
      out.write("            document.body.appendChild(form);\r\n");
      out.write("\r\n");
      out.write("            // 폼 제출\r\n");
      out.write("            form.submit();\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/member/mySize.jsp(7,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /WEB-INF/views/member/mySize.jsp(7,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/member/mySize.jsp(7,0) '${pageContext.request.contextPath }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write('\r');
          out.write('\n');
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\r\n");
          if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write('\r');
          out.write('\n');
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/member/mySize.jsp(16,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.msg == 'updateSuccess' }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("<script>\r\n");
          out.write("alert('저장 및 수정 완료')\r\n");
          out.write("</script>\r\n");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f1_reused = false;
    try {
      _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/member/mySize.jsp(22,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.msg == 'updatFailure' }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
      if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("<script>\r\n");
          out.write("alert('저장 및 수정 실패 (키 몸무게는 숫자 3자리 미만으로 입력해주세요)')\r\n");
          out.write("</script>\r\n");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
      _jspx_th_c_005fwhen_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
    }
    return false;
  }
}
