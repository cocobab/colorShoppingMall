/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-04-25 17:49:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.magazine;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class lookbookInfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/C:/Users/lyj/finally_workSpace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/finalpro/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1708193184989L));
    _jspx_dependants.put("jar:file:/C:/Users/lyj/finally_workSpace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/finalpro/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/Users/lyj/finally_workSpace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/finalpro/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fstep_005fend_005fbegin;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fstep_005fend_005fbegin = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fstep_005fend_005fbegin.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("utf-8");

      out.write("    \r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/chart.js@2.8.0\"></script>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/finalpro/resources/css/lookbookInfo.css\">\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("document.addEventListener('DOMContentLoaded', function () {\r\n");
      out.write("    var tagListString = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${tagList}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"; // 예: \"[태그1,태그2,태그3]\"\r\n");
      out.write("    tagListString = tagListString.replace(/^\\[/, \"\").replace(/\\]$/, \"\"); // '['와 ']'를 제거합니다.\r\n");
      out.write("    var tags = tagListString.split(','); // 쉼표로 구분된 문자열을 배열로 변환\r\n");
      out.write("\r\n");
      out.write("    var tagContainer = document.getElementById('tagContainer'); // 태그 컨테이너 선택\r\n");
      out.write("\r\n");
      out.write("    // 배열의 각 요소(태그)에 대해 링크 생성\r\n");
      out.write("    tags.forEach(function(tag) {\r\n");
      out.write("        var dd = document.createElement('dd');\r\n");
      out.write("        dd.className = 'listItem';\r\n");
      out.write("\r\n");
      out.write("        var tagLink = document.createElement('a');\r\n");
      out.write("        tagLink.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product/searchList.do?keyword=\" + tag.trim();\r\n");
      out.write("        tagLink.textContent = tag.trim();\r\n");
      out.write("\r\n");
      out.write("        dd.appendChild(tagLink); // <dd> 요소에 <a> 태그 추가\r\n");
      out.write("        tagContainer.appendChild(dd); // <dl class=\"article-tag-list list\">에 <dd> 요소 추가\r\n");
      out.write("    });\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("	<meta charset=\"UTF-8\">\r\n");
      out.write("	<title>Insert title here</title>\r\n");
      out.write("	<style type=\"text/css\">\r\n");
      out.write("	\r\n");
      out.write("	/* .arrowBtnBox svg {\r\n");
      out.write("	    display: none;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.arrowBtnBox:hover svg {\r\n");
      out.write("	    display: block;\r\n");
      out.write("	} */\r\n");
      out.write("	\r\n");
      out.write("	.listMagazineImage {\r\n");
      out.write("	    display: none; /* 모든 슬라이드를 기본적으로 숨깁니다. */\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	</style>\r\n");
      out.write("	<script>\r\n");
      out.write("	document.addEventListener('DOMContentLoaded', function () {\r\n");
      out.write("		console.log(\"오긴함\");\r\n");
      out.write("	    var slides = document.querySelectorAll('.listMagazineImage'); // 모든 슬라이드를 선택합니다.\r\n");
      out.write("	    console.log(slides);\r\n");
      out.write("	    var currentIndex = 0; // 현재 보이는 슬라이드의 인덱스입니다.\r\n");
      out.write("	    slides[currentIndex].style.display = 'block'; // 초기 상태에서 첫 번째 슬라이드를 보이게 합니다.\r\n");
      out.write("	\r\n");
      out.write("	 // 'next' 버튼에 클릭 이벤트 리스너를 추가합니다.\r\n");
      out.write("	    document.getElementById('next').addEventListener('click', function() {\r\n");
      out.write("	        slides[currentIndex].style.display = 'none'; // 현재 슬라이드를 숨깁니다.\r\n");
      out.write("	        currentIndex = (currentIndex + 1) % slides.length; // 다음 슬라이드로 인덱스를 업데이트합니다.\r\n");
      out.write("	        slides[currentIndex].style.display = 'block'; // 업데이트된 인덱스의 슬라이드를 보이게 합니다.\r\n");
      out.write("	        nextPage(); // 페이지 버튼 업데이트 함수 호출\r\n");
      out.write("	    });\r\n");
      out.write("\r\n");
      out.write("	    // 'prev' 버튼에 클릭 이벤트 리스너를 추가합니다.\r\n");
      out.write("	    document.getElementById('prev').addEventListener('click', function() {\r\n");
      out.write("	        slides[currentIndex].style.display = 'none'; // 현재 슬라이드를 숨깁니다.\r\n");
      out.write("	        currentIndex = (currentIndex - 1 + slides.length) % slides.length; // 이전 슬라이드로 인덱스를 업데이트합니다.\r\n");
      out.write("	        slides[currentIndex].style.display = 'block'; // 업데이트된 인덱스의 슬라이드를 보이게 합니다.\r\n");
      out.write("	        previousPage(); // 페이지 버튼 업데이트 함수 호출\r\n");
      out.write("	    });\r\n");
      out.write("\r\n");
      out.write("	});\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("<!-- 페이지 만들기 -->	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("var currentPage = 1;\r\n");
      out.write("var itemsPerPage = 1; // 여기서는 아이템 수를 1로 설정했지만, 필요에 따라 조정하세요.\r\n");
      out.write("\r\n");
      out.write("function goToPage(pageNum) {\r\n");
      out.write("    currentPage = pageNum;\r\n");
      out.write("    updateItemsDisplay();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function nextPage() {\r\n");
      out.write("    var allItems = document.querySelectorAll('.listMagazineImage');\r\n");
      out.write("    var totalPages = Math.ceil(allItems.length / itemsPerPage);\r\n");
      out.write("    if (currentPage < totalPages) {\r\n");
      out.write("        currentPage++;\r\n");
      out.write("        updateItemsDisplay();\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function previousPage() {\r\n");
      out.write("    if (currentPage > 1) {\r\n");
      out.write("        currentPage--;\r\n");
      out.write("        updateItemsDisplay();\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function firstPage() {\r\n");
      out.write("    currentPage = 1;\r\n");
      out.write("    updateItemsDisplay();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function lastPage(totalPages) {\r\n");
      out.write("    currentPage = totalPages;\r\n");
      out.write("    updateItemsDisplay();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 페이지네이션 버튼을 동적으로 생성하는 함수를 수정합니다.\r\n");
      out.write("function createPaginationButtons() {\r\n");
      out.write("    var paginationContainer = document.querySelector('.paginationSnap');\r\n");
      out.write("    var totalItems = document.querySelectorAll('.listMagazineImage').length;\r\n");
      out.write("    var totalPages = Math.ceil(totalItems / itemsPerPage);\r\n");
      out.write("    var maxPageButtons = 10; // 한 번에 보여줄 최대 페이지 버튼 수\r\n");
      out.write("    var visiblePages = Math.min(totalPages, maxPageButtons);\r\n");
      out.write("    var currentPageGroup = Math.ceil(currentPage / maxPageButtons);\r\n");
      out.write("\r\n");
      out.write("    // 기존 페이지네이션 버튼을 모두 제거\r\n");
      out.write("    paginationContainer.innerHTML = '';\r\n");
      out.write("\r\n");
      out.write("    // 맨 처음 페이지와 이전 페이지 버튼 추가\r\n");
      out.write("    if (currentPage > 1) {\r\n");
      out.write("        paginationContainer.appendChild(createButton('<<', firstPage));\r\n");
      out.write("        paginationContainer.appendChild(createButton('<', previousPage));\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 페이지 버튼 생성\r\n");
      out.write("    var startPage = (currentPageGroup - 1) * maxPageButtons + 1;\r\n");
      out.write("    var endPage = startPage + visiblePages - 1;\r\n");
      out.write("    for (let i = startPage; i <= endPage && i <= totalPages; i++) {\r\n");
      out.write("        let button = createButton(i, function() { goToPage(i); }, i === currentPage);\r\n");
      out.write("        paginationContainer.appendChild(button);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 다음 페이지와 맨 끝 페이지 버튼 추가\r\n");
      out.write("    if (currentPage < totalPages) {\r\n");
      out.write("        paginationContainer.appendChild(createButton('>', nextPage));\r\n");
      out.write("        paginationContainer.appendChild(createButton('>>', function() { lastPage(totalPages); }));\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function createButton(text, eventHandler, isActive=false) {\r\n");
      out.write("    let button = document.createElement('button');\r\n");
      out.write("    button.className = 'pagination_button' + (isActive ? ' active' : '');\r\n");
      out.write("    button.innerText = text;\r\n");
      out.write("    button.addEventListener('click', eventHandler);\r\n");
      out.write("    return button;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function updateItemsDisplay() {\r\n");
      out.write("    var allItems = document.querySelectorAll('.listMagazineImage');\r\n");
      out.write("    var startItem = (currentPage - 1) * itemsPerPage;\r\n");
      out.write("    var endItem = startItem + itemsPerPage;\r\n");
      out.write("\r\n");
      out.write("    allItems.forEach(function(item, index) {\r\n");
      out.write("        item.style.display = (index >= startItem && index < endItem) ? 'block' : 'none';\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    createPaginationButtons();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("    updateItemsDisplay();\r\n");
      out.write("    createPaginationButtons();\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 관련 상품 페이지 수 만들기 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("var currentPage_lookbook = 1;\r\n");
      out.write("var itemsPerPage_lookbook = 9;\r\n");
      out.write("\r\n");
      out.write("function goToPage_lookbook(pageNum) {\r\n");
      out.write("    currentPage_lookbook = pageNum;\r\n");
      out.write("    updateItemsDisplay_lookbook();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function nextPage_lookbook() {\r\n");
      out.write("    var allItems = document.querySelectorAll('.listItem_lookbook');\r\n");
      out.write("    var totalPages = Math.ceil(allItems.length / itemsPerPage_lookbook);\r\n");
      out.write("    if (currentPage_lookbook < totalPages) {\r\n");
      out.write("        currentPage_lookbook++;\r\n");
      out.write("        updateItemsDisplay_lookbook();\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function previousPage_lookbook() {\r\n");
      out.write("    if (currentPage_lookbook > 1) {\r\n");
      out.write("        currentPage_lookbook--;\r\n");
      out.write("        updateItemsDisplay_lookbook();\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function firstPage_lookbook() {\r\n");
      out.write("    currentPage_lookbook = 1;\r\n");
      out.write("    updateItemsDisplay_lookbook();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function lastPage_lookbook(totalPages) {\r\n");
      out.write("    currentPage_lookbook = totalPages;\r\n");
      out.write("    updateItemsDisplay_lookbook();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function createPaginationButtons_lookbook() {\r\n");
      out.write("    var paginationContainer = document.querySelector('.paginationItem');\r\n");
      out.write("    var totalItems = document.querySelectorAll('.listItem_lookbook').length;\r\n");
      out.write("    var totalPages = Math.ceil(totalItems / itemsPerPage_lookbook);\r\n");
      out.write("\r\n");
      out.write("    paginationContainer.innerHTML = '';\r\n");
      out.write("\r\n");
      out.write("    if (currentPage_lookbook > 1) {\r\n");
      out.write("        paginationContainer.appendChild(createButton_lookbook('<<', firstPage_lookbook));\r\n");
      out.write("        paginationContainer.appendChild(createButton_lookbook('<', previousPage_lookbook));\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    for (let i = 1; i <= totalPages; i++) {\r\n");
      out.write("        let button = createButton_lookbook(i, function() { goToPage_lookbook(i); }, i === currentPage_lookbook);\r\n");
      out.write("        paginationContainer.appendChild(button);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    if (currentPage_lookbook < totalPages) {\r\n");
      out.write("        paginationContainer.appendChild(createButton_lookbook('>', nextPage_lookbook));\r\n");
      out.write("        paginationContainer.appendChild(createButton_lookbook('>>', function() { lastPage_lookbook(totalPages); }));\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function createButton_lookbook(text, eventHandler, isActive=false) {\r\n");
      out.write("    let button = document.createElement('button');\r\n");
      out.write("    button.className = 'pagination_button2' + (isActive ? ' active' : '');\r\n");
      out.write("    button.innerText = text;\r\n");
      out.write("    button.addEventListener('click', eventHandler);\r\n");
      out.write("    return button;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function updateItemsDisplay_lookbook() {\r\n");
      out.write("    var allItems = document.querySelectorAll('.listItem_lookbook');\r\n");
      out.write("    var startItem = (currentPage_lookbook - 1) * itemsPerPage_lookbook;\r\n");
      out.write("    var endItem = startItem + itemsPerPage_lookbook;\r\n");
      out.write("\r\n");
      out.write("    allItems.forEach(function(item, index) {\r\n");
      out.write("        item.style.display = (index >= startItem && index < endItem) ? 'block' : 'none';\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    createPaginationButtons_lookbook();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("    updateItemsDisplay_lookbook();\r\n");
      out.write("    createPaginationButtons_lookbook();\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"column-wrapper\" id=\"wrapper\">\r\n");
      out.write("		<div class=\"bottom-column column clearfix leftClose\">\r\n");
      out.write("			<!-- 본문 -->\r\n");
      out.write("			<div class=\"main-content-wrapper\">\r\n");
      out.write("				<div class=\"lookbook_header\">\r\n");
      out.write("					<!-- @D : navi -->\r\n");
      out.write("					<div class=\"breadCrumb-wrapper\">\r\n");
      out.write("						<a href=\"/finalpro/main.do\" class=\"breadCrumb\">무신사</a>\r\n");
      out.write("						<span>&gt;</span>\r\n");
      out.write("						<a href=\"/finalpro/magazine/lookbookList.do\" class=\"breadCrumb\">매거진</a>\r\n");
      out.write("						<span>&gt;</span>\r\n");
      out.write("						<span class=\"breadCrumb\">\r\n");
      out.write("							<a href=\"/finalpro/magazine/lookbookList.do\">브랜드룩북</a>\r\n");
      out.write("						</span>\r\n");
      out.write("						<span>&gt;</span>\r\n");
      out.write("						<span class=\"breadCrumb\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lookbook.title }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("						 \r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"breadCrumb-wrapper sub\">\r\n");
      out.write("						<a href=\"/finalpro/magazine/lookbookList.do\" class=\"breadCrumb\">Magazine</a>\r\n");
      out.write("						<span>&gt;</span>\r\n");
      out.write("						<span class=\"breadCrumb\">\r\n");
      out.write("							<a href=\"/finalpro/magazine/lookbookList.do\" style=\"text-transform: capitalize\">brandlookbook</a>\r\n");
      out.write("						</span>\r\n");
      out.write("						<p class=\"page_intro\">다양한 브랜드의 컬렉션을 집중 소개하며 합리적인 쇼핑에 도움을 줄 유용한 가이드를 담은 콘텐츠를 제공합니다.</p>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				\r\n");
      out.write("				<div class=\"content-wrapper article wrapper\">\r\n");
      out.write("\r\n");
      out.write("					<div class=\"section\">\r\n");
      out.write("						<div class=\"dbInfo-box box clearfix\">\r\n");
      out.write("							<div class=\"dbImg\">\r\n");
      out.write("								<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/download.do?imageFileName=1.jpg&magazineNo=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lookbook.magazineNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&path=lookbook\" alt=\"라퍼_돌아온 패트와 매트\">\r\n");
      out.write("								<div class=\"controlBox\">\r\n");
      out.write("									<a href=\"/finalpro/magazine/lookbookList.do\">\r\n");
      out.write("										<span class=\"plain-btn btn\">목록으로</span>\r\n");
      out.write("									</a>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"snapInfo\">\r\n");
      out.write("								<table>\r\n");
      out.write("									<caption>\r\n");
      out.write("										<p class=\"title\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lookbook.title }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("										<p class=\"info\">\r\n");
      out.write("											<span class=\"date division\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lookbook.regdate }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("											<span class=\"brand\">관련브랜드 : \r\n");
      out.write("												<a href=\"/finalpro/magazine/lookbookList.do?brand=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lookbook.brand }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('"');
      out.write('>');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lookbook.brand }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("(바로가기)</a>\r\n");
      out.write("											</span>\r\n");
      out.write("										</p>\r\n");
      out.write("									</caption>\r\n");
      out.write("									<tbody>\r\n");
      out.write("										<tr class=\"first\">\r\n");
      out.write("											<th>\r\n");
      out.write("												<span>년도/시즌</span>\r\n");
      out.write("											</th>\r\n");
      out.write("											<td>\r\n");
      out.write("												<span><a href=\"/finalpro/magazine/lookbookList.do\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lookbook.season }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a></span>\r\n");
      out.write("											</td>\r\n");
      out.write("										</tr>\r\n");
      out.write("										<tr>\r\n");
      out.write("											<th>\r\n");
      out.write("												<span>모델</span>\r\n");
      out.write("											</th>\r\n");
      out.write("											<td>\r\n");
      out.write("												<span>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lookbook.model }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("											</td>\r\n");
      out.write("											<th>\r\n");
      out.write("												<span>포토그래퍼</span>\r\n");
      out.write("											</th>\r\n");
      out.write("											<td>\r\n");
      out.write("												<span>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lookbook.photographer }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("											</td>\r\n");
      out.write("										</tr>\r\n");
      out.write("										<tr class=\"description\">\r\n");
      out.write("											<th>\r\n");
      out.write("												<span>설명</span>\r\n");
      out.write("											</th>\r\n");
      out.write("											<td colspan=\"3\">\r\n");
      out.write("												<p>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lookbook.content }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("											</td>\r\n");
      out.write("										</tr>\r\n");
      out.write("									</tbody>\r\n");
      out.write("								</table>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"section lookbook-content-area\">\r\n");
      out.write("						<div class=\"contentsNav pageBoxV2\" data-current-page=\"1\" br-data-name=\"lookbook_content_tab\">\r\n");
      out.write("							<div class=\"content-list-wrapper\">\r\n");
      out.write("								<div class=\"controller\">\r\n");
      out.write("									<div class=\"arrowBtnBox\" id=\"prev\">\r\n");
      out.write("										<svg height=\"50px\" id=\"Layer_1\" style=\"enable-background:new 0 0 512 512;\" version=\"1.1\" viewBox=\"0 0 512 512\" width=\"100px\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n");
      out.write("										   <polygon points=\"352,115.4 331.3,96 160,256 331.3,416 352,396.7 201.5,256 \" />\r\n");
      out.write("										</svg>\r\n");
      out.write("									</div>\r\n");
      out.write("									<div class=\"arrowBtnBox\" id=\"next\">\r\n");
      out.write("										<svg height=\"50px\" id=\"Layer_1\" style=\"enable-background:new 0 0 512 512;\" version=\"1.1\" viewBox=\"0 0 512 512\" width=\"100px\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n");
      out.write("										   <polygon points=\"160,115.4 180.7,96 352,256 180.7,416 160,396.7 310.5,256 \" />\r\n");
      out.write("										</svg>\r\n");
      out.write("									</div>\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"slider\">\r\n");
      out.write("									<ul class=\"content-list\">\r\n");
      out.write("										");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("									</ul>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("							\r\n");
      out.write("							\r\n");
      out.write("							<!-- 페이지 버튼 -->	  \r\n");
      out.write("	 						<div class=\"paginationSnap\"></div>\r\n");
      out.write("							\r\n");
      out.write("							\r\n");
      out.write("							 ");
      out.write("\r\n");
      out.write("							\r\n");
      out.write("							\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("						<div class=\"tag-box box tagList\">\r\n");
      out.write("						    <dl class=\"article-tag-list list\" id=\"tagContainer\"> <!-- ID 변경 -->\r\n");
      out.write("						        <dt>태그</dt>\r\n");
      out.write("						        <!-- JavaScript가 여기에 동적으로 태그를 추가합니다 -->\r\n");
      out.write("						    </dl>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<!-- 무신사 스토어 상품-->\r\n");
      out.write("					<div class=\"section store_goods\" id=\"rel_store_goods_div\" _p=\"0\">\r\n");
      out.write("						<p class=\"header_store_tit\">\r\n");
      out.write("								<span class=\"eng_store\">Related Store</span>\r\n");
      out.write("								<span class=\"kor_store_product\">스토어 관련상품</span>\r\n");
      out.write("								<div class=\"paginationItem\"></div>\r\n");
      out.write("						<div class=\"related-box box\">\r\n");
      out.write("							\r\n");
      out.write("							<ul class=\"store-article-list article-list list ul-goodSticker\" id=\"ul-goodSticker-sgoods\">\r\n");
      out.write("								");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("							</ul>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"viewBtnBox\">\r\n");
      out.write("							<a href=\"/finalpro/magazine/lookbookList.do\" class=\"plain-btn btn\">목록으로</a>\r\n");
      out.write("						</div>\r\n");
      out.write("							\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- // main-content-wrapper -->\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- // bottom-column -->\r\n");
      out.write("	</div>\r\n");
      out.write("</body>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/magazine/lookbookInfo.jsp(9,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /WEB-INF/views/magazine/lookbookInfo.jsp(9,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/magazine/lookbookInfo.jsp(9,0) '#{pageContext.request.contextPath }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"#{pageContext.request.contextPath }",java.lang.Object.class)));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fstep_005fend_005fbegin.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/magazine/lookbookInfo.jsp(384,10) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("i");
      // /WEB-INF/views/magazine/lookbookInfo.jsp(384,10) name = begin type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setBegin(1);
      // /WEB-INF/views/magazine/lookbookInfo.jsp(384,10) name = step type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setStep(1);
      // /WEB-INF/views/magazine/lookbookInfo.jsp(384,10) name = end type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setEnd(((java.lang.Integer) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lookbook.imageNumber }", int.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).intValue());
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("											<li class=\"listMagazineImage\" style=\"width: 1200px;\" itemid=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${i }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("												<div class=\"contentMedia ui-sc-contents\">\r\n");
            out.write("													<a href=\"#\"\r\n");
            out.write("														title=\"라퍼_돌아온 패트와 매트\" class=\"lbox\" related_goods_no=\"\" __ind=\"0\">\r\n");
            out.write("														<img title=\"라퍼_돌아온 패트와 매트\" alt=\"라퍼_돌아온 패트와 매트\"\r\n");
            out.write("															src=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("/download.do?imageFileName=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${i }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(".jpg&magazineNo=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lookbook.magazineNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("&path=lookbook\"\r\n");
            out.write("															align=\"top\" class=\"photo\" style=\"max-width: 1200px;\"></a>\r\n");
            out.write("												</div>\r\n");
            out.write("											</li>\r\n");
            out.write("										");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fstep_005fend_005fbegin.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /WEB-INF/views/magazine/lookbookInfo.jsp(434,8) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("item");
      // /WEB-INF/views/magazine/lookbookInfo.jsp(434,8) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/magazine/lookbookInfo.jsp(434,8) '${magazineProductList }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${magazineProductList }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("									<li class=\"listItem_lookbook\">\r\n");
            out.write("										<div class=\"articleImg\">\r\n");
            out.write("											<a href=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("/product/detailProduct.do?productNo=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item.productNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" target=\"_top\">\r\n");
            out.write("												<img class=\"lazy-load-image\" alt=\"라퍼_[PAT&amp;MAT] 더 웨이 홈 티셔츠 - 화이트\" \r\n");
            out.write("												src=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("/download.do?imageFileName=1.jpg&productNo=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item.productNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("&path=\">\r\n");
            out.write("											</a>\r\n");
            out.write("										</div>\r\n");
            out.write("										<div class=\"articleInfo\">\r\n");
            out.write("											<p class=\"brandName\">\r\n");
            out.write("													<h4 class=\"brackets\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item.brand }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</h4>\r\n");
            out.write("											</p>\r\n");
            out.write("												<p class=\"description\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item.name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</p>\r\n");
            out.write("										</div>\r\n");
            out.write("										<div class=\"priceInfo noCouponP\">\r\n");
            out.write("											<div class=\"priceBox\">\r\n");
            out.write("												<p class=\"originalPrice\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item.price }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("원</p>\r\n");
            out.write("											</div>\r\n");
            out.write("										</div>\r\n");
            out.write("										<span class=\"txt_cnt_like\">\r\n");
            out.write("											<svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n");
            out.write("												<path d=\"M14.6817 4.35298C13.2775 2.94875 11.0007 2.94875 9.59651 4.35298L8.98593 4.96356L8.40351 4.38114C6.99928 2.97691 4.72257 2.97691 3.31834 4.38114C1.91411 5.78537 1.91411 8.06208 3.31834 9.46631L8.99948 15.1474L11.3269 12.82C11.4196 12.7273 11.5068 12.631 11.5883 12.5316L14.6817 9.43815C16.0859 8.03392 16.0859 5.75721 14.6817 4.35298Z\" fill=\"#FF0000\"></path>\r\n");
            out.write("											</svg> ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item.totalLikes}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\r\n");
            out.write("										</span>\r\n");
            out.write("									</li>\r\n");
            out.write("								");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }
}
