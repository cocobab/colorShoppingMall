/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-05-08 06:21:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.mypage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class like_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1708193184989L));
    _jspx_dependants.put("jar:file:/C:/Users/lyj/finally_workSpace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/finalpro/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<link rel =\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/myPage.css\">\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("		function changeText() {\r\n");
      out.write("			showDelButton();\r\n");
      out.write("			hideBeforeChoice();\r\n");
      out.write("			updateItemsDisplay1();\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 삭제 버튼을 클릭하고 클릭된 제품들을 리스트에 넣고 해당 리스트를 db에서 삭제하고 다시 like.do로 가서 출력\r\n");
      out.write("		// 클릭한 제품들이 없을 경우 다시 선택해달라는 메시지창\r\n");
      out.write("		function deleteText() {\r\n");
      out.write("			var frm = document.getElementById(\"likeListForm\");\r\n");
      out.write("			var choiceBtn = document.getElementById(\"choiceBtn\");\r\n");
      out.write("			var deleteBtn = document.getElementById(\"deleteBtn\");\r\n");
      out.write("			var cancelBtn = document.getElementById(\"cancelBtn\");\r\n");
      out.write("			var beforeChoice = document.getElementsByClassName(\"beforeChoice\");\r\n");
      out.write("			var choice = document.getElementsByClassName(\"choice\");\r\n");
      out.write("\r\n");
      out.write("			choiceBtn.style.display = \"inline\"; // 선택 버튼 표시\r\n");
      out.write("			deleteBtn.style.display = \"none\"; // 삭제 버튼 숨김\r\n");
      out.write("			cancelBtn.style.display = \"none\"; // 취소 버튼 숨김\r\n");
      out.write("				  \r\n");
      out.write("			var productNoList = [];\r\n");
      out.write("			var checkboxes = document.querySelectorAll('input[type=\"checkbox\"]:checked');\r\n");
      out.write("			 \r\n");
      out.write("			checkboxes.forEach(function(checkbox) {\r\n");
      out.write("				productNoList.push(checkbox.value);\r\n");
      out.write("			});\r\n");
      out.write("				\r\n");
      out.write("			if(checkboxes != null && checkboxes.length != 0){\r\n");
      out.write("				if(confirm(\"선택하신 상품을 삭제 하시겠습니까?\")){\r\n");
      out.write("					location.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/mypage/deleteLike.do?productNoList=\" + productNoList.join(\",\");\r\n");
      out.write("				}\r\n");
      out.write("			}else{\r\n");
      out.write("				alert('선택하신 상품이 없습니다.');\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function cancelSelection() {\r\n");
      out.write("			showChoiceButton();\r\n");
      out.write("			hideChoice();\r\n");
      out.write("			updateItemsDisplay();\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 삭제, 취소 버튼만 보이게\r\n");
      out.write("		function showDelButton() {\r\n");
      out.write("	        var choiceBtn = document.getElementById(\"choiceBtn\");\r\n");
      out.write("	        var deleteBtn = document.getElementById(\"deleteBtn\");\r\n");
      out.write("	        var cancelBtn = document.getElementById(\"cancelBtn\");\r\n");
      out.write("\r\n");
      out.write("	        choiceBtn.style.display = \"none\"; // 선택 버튼 표시\r\n");
      out.write("	        deleteBtn.style.display = \"inline\"; // 삭제 버튼 숨김\r\n");
      out.write("	        cancelBtn.style.display = \"inline\"; // 취소 버튼 숨김\r\n");
      out.write("	    }\r\n");
      out.write("		\r\n");
      out.write("		// 선택 버튼만 보이게\r\n");
      out.write("		function showChoiceButton() {\r\n");
      out.write("	        var choiceBtn = document.getElementById(\"choiceBtn\");\r\n");
      out.write("	        var deleteBtn = document.getElementById(\"deleteBtn\");\r\n");
      out.write("	        var cancelBtn = document.getElementById(\"cancelBtn\");\r\n");
      out.write("\r\n");
      out.write("	        choiceBtn.style.display = \"inline\"; // 선택 버튼 표시\r\n");
      out.write("	        deleteBtn.style.display = \"none\"; // 삭제 버튼 숨김\r\n");
      out.write("	        cancelBtn.style.display = \"none\"; // 취소 버튼 숨김\r\n");
      out.write("	    }\r\n");
      out.write("		\r\n");
      out.write("		// 누르기 전(페이지 이동) - beforeChoice 보이게\r\n");
      out.write("		function hideChoice() {\r\n");
      out.write("			var beforeChoice = document.getElementsByClassName(\"beforeChoice\");\r\n");
      out.write("			var choice = document.getElementsByClassName(\"choice\");\r\n");
      out.write("			\r\n");
      out.write("			for(var i = 0; i < beforeChoice.length; i++){\r\n");
      out.write("				  beforeChoice[i].style.display = \"block\";\r\n");
      out.write("				  choice[i].style.display = \"none\";\r\n");
      out.write("	        }\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 누르고 난 후(삭제) - choice 보이게\r\n");
      out.write("		function hideBeforeChoice() {\r\n");
      out.write("			var beforeChoice = document.getElementsByClassName(\"beforeChoice\");\r\n");
      out.write("			var choice = document.getElementsByClassName(\"choice\");\r\n");
      out.write("			\r\n");
      out.write("			for(var i = 0; i < beforeChoice.length; i++){\r\n");
      out.write("				  beforeChoice[i].style.display = \"none\";\r\n");
      out.write("				  choice[i].style.display = \"block\";\r\n");
      out.write("	        }\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("<!-- 페이지 순서 만들때는 이거 사용하면 됨 -->\r\n");
      out.write("\r\n");
      out.write("	var currentPage = 1;\r\n");
      out.write("	var itemsPerPage = 10;   \r\n");
      out.write("	\r\n");
      out.write("	function goToPage(pageNum) {\r\n");
      out.write("	    currentPage = pageNum;\r\n");
      out.write("	    showChoiceButton();\r\n");
      out.write("		hideChoice();\r\n");
      out.write("		updateItemsDisplay();\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function nextPage() {\r\n");
      out.write("	    var allItems = document.querySelectorAll('.beforeChoice');\r\n");
      out.write("	    var totalPages = Math.ceil(allItems.length / itemsPerPage);\r\n");
      out.write("	    if (currentPage < totalPages) {\r\n");
      out.write("	        currentPage++;\r\n");
      out.write("	        showChoiceButton();\r\n");
      out.write("			hideChoice();\r\n");
      out.write("			updateItemsDisplay();\r\n");
      out.write("	    }\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function previousPage() {\r\n");
      out.write("	    if (currentPage > 1) {\r\n");
      out.write("	        currentPage--;\r\n");
      out.write("	        showChoiceButton();\r\n");
      out.write("			hideChoice();\r\n");
      out.write("			updateItemsDisplay();\r\n");
      out.write("	    }\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("	    updateItemsDisplay();\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("//페이지네이션 버튼을 동적으로 생성하는 함수\r\n");
      out.write("function createPaginationButtons() {\r\n");
      out.write("    var paginationContainer = document.querySelector('.paginationSnap');\r\n");
      out.write("    var totalItems = document.querySelectorAll('.beforeChoice').length;\r\n");
      out.write("    var totalPages = Math.ceil(totalItems / itemsPerPage);\r\n");
      out.write("\r\n");
      out.write("    // 기존 페이지네이션 버튼을 모두 제거합니다.\r\n");
      out.write("    paginationContainer.innerHTML = '';\r\n");
      out.write("\r\n");
      out.write(" // 맨 처음 페이지로 이동하는 버튼 추가\r\n");
      out.write("    if (currentPage > 1) {\r\n");
      out.write("        let firstPageButton = document.createElement('button');\r\n");
      out.write("        firstPageButton.className = 'pagination_button';\r\n");
      out.write("        firstPageButton.innerText = '<<';\r\n");
      out.write("        firstPageButton.addEventListener('click', firstPage);\r\n");
      out.write("        paginationContainer.appendChild(firstPageButton);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    if (currentPage > 1) {\r\n");
      out.write("        let prevButton = document.createElement('button');\r\n");
      out.write("        prevButton.className = 'pagination_button';\r\n");
      out.write("        prevButton.innerText = '<';\r\n");
      out.write("        prevButton.addEventListener('click', previousPage);\r\n");
      out.write("        paginationContainer.appendChild(prevButton);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    for (let i = 1; i <= totalPages; i++) {\r\n");
      out.write("        let button = document.createElement('button');\r\n");
      out.write("        button.className = 'pagination_button';\r\n");
      out.write("        button.innerText = i;\r\n");
      out.write("        if (i === currentPage) {\r\n");
      out.write("            button.classList.add('active');\r\n");
      out.write("        }\r\n");
      out.write("        button.addEventListener('click', function() {\r\n");
      out.write("            goToPage(i);\r\n");
      out.write("        });\r\n");
      out.write("        paginationContainer.appendChild(button);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    if (currentPage < totalPages) {\r\n");
      out.write("        let nextButton = document.createElement('button');\r\n");
      out.write("        nextButton.className = 'pagination_button';\r\n");
      out.write("        nextButton.innerText = '>';\r\n");
      out.write("        nextButton.addEventListener('click', nextPage);\r\n");
      out.write("        paginationContainer.appendChild(nextButton);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 맨 끝 페이지로 이동하는 버튼 추가\r\n");
      out.write("    if (currentPage < totalPages) {\r\n");
      out.write("        let lastPageButton = document.createElement('button');\r\n");
      out.write("        lastPageButton.className = 'pagination_button';\r\n");
      out.write("        lastPageButton.innerText = '>>';\r\n");
      out.write("        lastPageButton.addEventListener('click', function() {\r\n");
      out.write("            lastPage(totalPages);\r\n");
      out.write("        });\r\n");
      out.write("        paginationContainer.appendChild(lastPageButton);\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("	function firstPage() {\r\n");
      out.write("	    currentPage = 1;\r\n");
      out.write("	    showChoiceButton();\r\n");
      out.write("		hideChoice();\r\n");
      out.write("		updateItemsDisplay();\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function lastPage(totalPages) {\r\n");
      out.write("	    currentPage = totalPages;\r\n");
      out.write("	    showChoiceButton();\r\n");
      out.write("		hideChoice();\r\n");
      out.write("		updateItemsDisplay();\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("	    updateItemsDisplay(); // 아이템을 업데이트하는 함수\r\n");
      out.write("	    createPaginationButtons(); // 페이지네이션 버튼을 생성하는 함수\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	function updateItemsDisplay() {\r\n");
      out.write("	    var allItems = document.querySelectorAll('.beforeChoice');\r\n");
      out.write("	    var startItem = (currentPage - 1) * itemsPerPage;\r\n");
      out.write("	    var endItem = startItem + itemsPerPage;\r\n");
      out.write("	\r\n");
      out.write("	    allItems.forEach(function(item, index) {\r\n");
      out.write("	        if (index >= startItem && index < endItem) {\r\n");
      out.write("	            item.style.display = 'block'; // 현재 페이지 아이템만 보여주기\r\n");
      out.write("	        } else {\r\n");
      out.write("	            item.style.display = 'none'; // 다른 페이지 아이템 숨기기\r\n");
      out.write("	        }\r\n");
      out.write("	    });\r\n");
      out.write("	\r\n");
      out.write("	    createPaginationButtons(); // 페이지네이션 버튼 업데이트\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function updateItemsDisplay1() {\r\n");
      out.write("	    var allItems = document.querySelectorAll('.choice');\r\n");
      out.write("	    var startItem = (currentPage - 1) * itemsPerPage;\r\n");
      out.write("	    var endItem = startItem + itemsPerPage;\r\n");
      out.write("	\r\n");
      out.write("	    allItems.forEach(function(item, index) {\r\n");
      out.write("	        if (index >= startItem && index < endItem) {\r\n");
      out.write("	            item.style.display = 'block'; // 현재 페이지 아이템만 보여주기\r\n");
      out.write("	        } else {\r\n");
      out.write("	            item.style.display = 'none'; // 다른 페이지 아이템 숨기기\r\n");
      out.write("	        }\r\n");
      out.write("	    });\r\n");
      out.write("	\r\n");
      out.write("	    createPaginationButtons(); // 페이지네이션 버튼 업데이트\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("        function sendMemberDetail() {\r\n");
      out.write("            // 폼 생성\r\n");
      out.write("            var form = document.createElement(\"form\");\r\n");
      out.write("            form.setAttribute(\"method\", \"post\");\r\n");
      out.write("            form.setAttribute(\"action\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/memberDetail.do\");\r\n");
      out.write("\r\n");
      out.write("            // memberId를 위한 input 요소 생성\r\n");
      out.write("            var idField = document.createElement(\"input\");\r\n");
      out.write("            idField.setAttribute(\"type\", \"hidden\");\r\n");
      out.write("            idField.setAttribute(\"name\", \"id\");\r\n");
      out.write("            idField.setAttribute(\"value\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"); // 여기서 member.id는 서버 사이드 코드에서 제공되어야 합니다.\r\n");
      out.write("            form.appendChild(idField);\r\n");
      out.write("\r\n");
      out.write("            // 생성된 폼을 문서에 추가\r\n");
      out.write("            document.body.appendChild(form);\r\n");
      out.write("\r\n");
      out.write("            // 폼 제출\r\n");
      out.write("            form.submit();\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function sendPostAddress() {\r\n");
      out.write("            // 폼 생성\r\n");
      out.write("            var form = document.createElement(\"form\");\r\n");
      out.write("            form.setAttribute(\"method\", \"post\");\r\n");
      out.write("            form.setAttribute(\"action\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/addressDetailForm.do\");\r\n");
      out.write("\r\n");
      out.write("            // memberId를 위한 input 요소 생성\r\n");
      out.write("            var idField = document.createElement(\"input\");\r\n");
      out.write("            idField.setAttribute(\"type\", \"hidden\");\r\n");
      out.write("            idField.setAttribute(\"name\", \"id\");\r\n");
      out.write("            idField.setAttribute(\"value\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"); // 여기서 member.id는 서버 사이드 코드에서 제공되어야 합니다.\r\n");
      out.write("            form.appendChild(idField);\r\n");
      out.write("\r\n");
      out.write("            // 생성된 폼을 문서에 추가\r\n");
      out.write("            document.body.appendChild(form);\r\n");
      out.write("\r\n");
      out.write("            // 폼 제출\r\n");
      out.write("            form.submit();\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function sendMySize() {\r\n");
      out.write("            // 폼 생성\r\n");
      out.write("            var form = document.createElement(\"form\");\r\n");
      out.write("            form.setAttribute(\"method\", \"post\");\r\n");
      out.write("            form.setAttribute(\"action\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/mySize.do\");\r\n");
      out.write("\r\n");
      out.write("            // memberId를 위한 input 요소 생성\r\n");
      out.write("            var idField = document.createElement(\"input\");\r\n");
      out.write("            idField.setAttribute(\"type\", \"hidden\");\r\n");
      out.write("            idField.setAttribute(\"name\", \"id\");\r\n");
      out.write("            idField.setAttribute(\"value\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${myPage.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"); // 여기서 member.id는 서버 사이드 코드에서 제공되어야 합니다.\r\n");
      out.write("            form.appendChild(idField);\r\n");
      out.write("\r\n");
      out.write("            // 생성된 폼을 문서에 추가\r\n");
      out.write("            document.body.appendChild(form);\r\n");
      out.write("\r\n");
      out.write("            // 폼 제출\r\n");
      out.write("            form.submit();\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("    <style>\r\n");
      out.write("	h2.likeTitle {\r\n");
      out.write("        margin: 15px 25px 0; /* 상단 마진을 10px로 수정 */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    hr {\r\n");
      out.write("        margin-top: 17px;\r\n");
      out.write("		height: 1px;\r\n");
      out.write("		background-color: black;\r\n");
      out.write("		width : 100%;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	 #productBox {\r\n");
      out.write("        overflow: hidden; /* 부모 요소의 높이를 자식 요소의 높이에 맞게 조절 */\r\n");
      out.write("        font-size : 15px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .beforeChoice, .choice {\r\n");
      out.write("        float: left; /* 왼쪽으로 부유시킴 */\r\n");
      out.write("        width: calc(20% - 50px); /* 너비를 20%로 설정하고 간격을 20px로 조절 */\r\n");
      out.write("        margin: 15px;\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        position: relative;\r\n");
      out.write("        height: 350px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .beforeChoice p, .choice p {\r\n");
      out.write("        margin: 5px 0;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .choice {\r\n");
      out.write("        position: relative;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .choice input[type=\"checkbox\"] {\r\n");
      out.write("        position: absolute;\r\n");
      out.write("        top: 10;\r\n");
      out.write("        left: 10;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .choiceBtn {\r\n");
      out.write("    	background-color: lightgary;\r\n");
      out.write("		border: none;\r\n");
      out.write("		border-radius: 5px;\r\n");
      out.write("		color: black;\r\n");
      out.write("		font-weight: 600;\r\n");
      out.write("		width: 70px;\r\n");
      out.write("		height: 30px;\r\n");
      out.write("		margin: 10px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .choiceBtn:hover {\r\n");
      out.write("    	background-color: black;\r\n");
      out.write("		border-radius: 5px;\r\n");
      out.write("		color: white;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .paginationSnap {\r\n");
      out.write("   		display: flex;\r\n");
      out.write("        justify-content: center;\r\n");
      out.write("        margin-top: 20px; /* 필요에 따라 여백 조정 */\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("    p.noItem {\r\n");
      out.write("   		display: flex;\r\n");
      out.write("        justify-content: center;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("        height: 200px; /* 필요에 따라 높이 조정 */\r\n");
      out.write("        font-size: 18px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("    \r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"main\">\r\n");
      out.write("		<div class=\"sidebar\">\r\n");
      out.write("			<h1>마이페이지</h1>\r\n");
      out.write("			<h3>쇼핑 정보</h3>\r\n");
      out.write("				<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/mypage/orderList.do\">구매 내역</a>\r\n");
      out.write("				<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/mypage/like.do\">좋아요 누른 상품</a>\r\n");
      out.write("				<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/mypage/recentProduct.do\">최근 본 상품</a>\r\n");
      out.write("			<h3>내 정보</h3>\r\n");
      out.write("				<button type=\"button\" onclick=\"sendMemberDetail()\">내정보 관리</button>\r\n");
      out.write("				<br>\r\n");
      out.write("				<button type=\"button\" onclick=\"sendPostAddress()\">주소록</button>\r\n");
      out.write("				<br>\r\n");
      out.write("				<button type=\"button\" onclick=\"sendMySize()\">나의 사이즈</button>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<div class = \"main-content2\">\r\n");
      out.write("			<h2 class = \"likeTitle\">좋아요</h2>\r\n");
      out.write("			<hr>\r\n");
      out.write("			\r\n");
      out.write("			");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			<div class = \"paginationSnap\"></div>\r\n");
      out.write("			\r\n");
      out.write("		</div>\r\n");
      out.write("			\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("</body>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/mypage/like.jsp(4,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /WEB-INF/views/mypage/like.jsp(4,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/mypage/like.jsp(4,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("				");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/mypage/like.jsp(404,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${likeList.size() != 0 && likeList != null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("					<div id=\"productBox\">\r\n");
          out.write("						");
          if (_jspx_meth_c_005fforEach_005f0(_jspx_th_c_005fwhen_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("					</div>\r\n");
          out.write("				\r\n");
          out.write("					<div>\r\n");
          out.write("						<button class = \"choiceBtn\" id=\"choiceBtn\" type=\"button\" onclick=\"changeText()\">선택</button>\r\n");
          out.write("						<button class = \"choiceBtn\"  id=\"deleteBtn\" style=\"display: none;\" type=\"button\"\r\n");
          out.write("							onclick=\"deleteText()\">삭제</button>\r\n");
          out.write("						<button class = \"choiceBtn\" id=\"cancelBtn\" style=\"display: none;\" type=\"button\"\r\n");
          out.write("							onclick=\"cancelSelection()\">취소</button>\r\n");
          out.write("					</div>\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f0);
      // /WEB-INF/views/mypage/like.jsp(406,6) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("like");
      // /WEB-INF/views/mypage/like.jsp(406,6) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/mypage/like.jsp(406,6) '${likeList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${likeList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("							<div class=\"beforeChoice\">\r\n");
            out.write("								<a href = \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("/product/detailProduct.do?productNo=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${like.productNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("									<img width=\"150px\" height=\"180px\" src=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("/download.do?imageFileName=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${like.imageFileName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("&productNo=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${like.productNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("&path=product\" alt = \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${like.name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("									<p>\r\n");
            out.write("										<a href=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("/brand/brandList.do?brand=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${like.brand}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${like.brand}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</a>\r\n");
            out.write("									</p>\r\n");
            out.write("									<p>\r\n");
            out.write("										<a href=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("/product/detailProduct.do?productNo=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${like.productNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${like.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</a>\r\n");
            out.write("									<p>\r\n");
            out.write("									<p>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${like.price}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</p>\r\n");
            out.write("									<p>♥ ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${like.likeCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</p>\r\n");
            out.write("								</a>\r\n");
            out.write("							</div>\r\n");
            out.write("							<div class=\"choice\" style=\"display: none;\">\r\n");
            out.write("								<input id=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${like.productNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" type=\"checkbox\" name=\"productNoList\"\r\n");
            out.write("									value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${like.productNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"> <label for=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${like.productNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("									<img width=\"150px\" height=\"180px\" src=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("/download.do?imageFileName=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${like.imageFileName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("&productNo=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${like.productNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("&path=product\" alt = \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${like.name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("									<p>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${like.brand}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</p>\r\n");
            out.write("									<p>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${like.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</p>\r\n");
            out.write("									<p>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${like.price}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</p>\r\n");
            out.write("									<p>♥ ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${like.likeCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</p>\r\n");
            out.write("								</label>\r\n");
            out.write("							</div>\r\n");
            out.write("						");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("					<p class = \"noItem\">좋아하는 상품이 없습니다.<br>상품을 추가해보세요..</p>\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }
}
