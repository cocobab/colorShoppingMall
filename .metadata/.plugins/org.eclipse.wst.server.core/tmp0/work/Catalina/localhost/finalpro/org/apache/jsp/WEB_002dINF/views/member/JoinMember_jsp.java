/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-05-08 10:41:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class JoinMember_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1708193184989L));
    _jspx_dependants.put("jar:file:/C:/Users/lyj/finally_workSpace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/finalpro/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    ");

    request.setCharacterEncoding("utf-8");
    
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("<link rel =\"stylesheet\" href=\"/finalpro/resources/css/joinMember.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<script>\r\n");
      out.write("var isEmailChecked = false;\r\n");
      out.write("var contextPath = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("function DupEmail() {\r\n");
      out.write("    var email = $('input[name=\"email\"]').val();\r\n");
      out.write("    $.ajax({\r\n");
      out.write("        url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/dupEmail.do',\r\n");
      out.write("        type: 'GET',\r\n");
      out.write("        data: {email: email},\r\n");
      out.write("        success: function(data) {\r\n");
      out.write("            if(data.dup) {\r\n");
      out.write("                alert('이미 사용 중인 이메일입니다.');\r\n");
      out.write("                isEmailChecked = false;\r\n");
      out.write("            } else {\r\n");
      out.write("                alert('사용 가능한 이메일입니다.');\r\n");
      out.write("                isEmailChecked = true;\r\n");
      out.write("            }\r\n");
      out.write("        },\r\n");
      out.write("        error: function() {\r\n");
      out.write("            alert('이메일 중복체크 실패');\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("   \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("var isIdChecked = false;\r\n");
      out.write("var contextPath = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("function DupId() {\r\n");
      out.write("    var id = $('input[name=\"id\"]').val();\r\n");
      out.write("    $.ajax({\r\n");
      out.write("        url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/dupId.do',\r\n");
      out.write("        type: 'GET',\r\n");
      out.write("        data: {id: id},\r\n");
      out.write("        success: function(data) {\r\n");
      out.write("            if(data.dup) {\r\n");
      out.write("                alert('이미 사용 중인 아이디입니다.');\r\n");
      out.write("                isIdChecked = false;\r\n");
      out.write("            } else {\r\n");
      out.write("                alert('사용 가능한 아이디입니다.');\r\n");
      out.write("                isIdChecked = true;\r\n");
      out.write("            }\r\n");
      out.write("        },\r\n");
      out.write("        error: function() {\r\n");
      out.write("            alert('아이디 중복체크 실패');\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("   \r\n");
      out.write("}\r\n");
      out.write("function validateForm() {\r\n");
      out.write("    var id = $('input[name=\"id\"]').val();\r\n");
      out.write("    var pwd = $('input[name=\"pwd\"]').val();\r\n");
      out.write("    var name = $('input[name=\"name\"]').val();\r\n");
      out.write("    var birthdate = $('input[name=\"birthdate\"]').val();\r\n");
      out.write("    var email = $('input[name=\"email\"]').val();\r\n");
      out.write("    var phone = $('input[name=\"phone\"]').val();\r\n");
      out.write("    var idck = $('button[name=\"idck\"]').val();\r\n");
      out.write("    var emailck = $('button[name=\"emailck\"]').val();\r\n");
      out.write("    var genderChecked = $('input[name=\"gender\"]:checked').length > 0;\r\n");
      out.write("\r\n");
      out.write("    // 아이디 검사\r\n");
      out.write("    if(id.length < 1 || id.length > 20) {\r\n");
      out.write("        alert(\"아이디는 1자 이상, 20자 이하로 입력해야 합니다.\");\r\n");
      out.write("        $('input[name=\"id\"]').focus();\r\n");
      out.write("        return false;\r\n");
      out.write("    }\r\n");
      out.write("    if(!isIdChecked) {\r\n");
      out.write("        alert(\"아이디 중복체크를 해주십시오\");\r\n");
      out.write("        $('input[name=\"id\"]').focus();\r\n");
      out.write("        return false;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 비밀번호 검사\r\n");
      out.write("    if(pwd.length < 8) {\r\n");
      out.write("        alert(\"비밀번호는 8자 이상으로 설정해야 합니다.\");\r\n");
      out.write("        $('input[name=\"pwd\"]').focus();\r\n");
      out.write("        return false;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 이름 검사\r\n");
      out.write("    if(name === \"\") {\r\n");
      out.write("        alert(\"이름을 입력해주세요.\");\r\n");
      out.write("        $('input[name=\"name\"]').focus();\r\n");
      out.write("        return false;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 생년월일 검사\r\n");
      out.write("    var birthdatePattern = /^\\d{4}(\\d{2})(\\d{2})$/;\r\n");
      out.write("    if(!birthdatePattern.test(birthdate)) {\r\n");
      out.write("        alert(\"생년월일은 YYYYMMDD 형식으로 입력해야 합니다.\");\r\n");
      out.write("        $('input[name=\"birthdate\"]').focus();\r\n");
      out.write("        return false;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 이메일 검사\r\n");
      out.write("   \r\n");
      out.write("    if(email === \"\") {\r\n");
      out.write("        alert(\"이메일 주소 형식으로 입력해주세요.\");\r\n");
      out.write("        $('input[name=\"email\"]').focus();\r\n");
      out.write("        return false;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    if(!isEmailChecked) {\r\n");
      out.write("        alert(\"이메일 중복체크를 해주십시오\");\r\n");
      out.write("        $('input[name=\"email\"]').focus();\r\n");
      out.write("        return false;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 휴대전화 검사\r\n");
      out.write("    var phonePattern = /^01([0|1|6|7|8|9])(\\d{3,4})(\\d{4})$/;\r\n");
      out.write("    if(!phonePattern.test(phone)) {\r\n");
      out.write("        alert(\"유효한 휴대전화 번호를 입력해주세요.\");\r\n");
      out.write("        $('input[name=\"phone\"]').focus();\r\n");
      out.write("        return false;\r\n");
      out.write("    }\r\n");
      out.write("    if(!genderChecked) {\r\n");
      out.write("        alert(\"성별을 선택해주세요.\");\r\n");
      out.write("        return false;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    return true;\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <form method=\"post\" action='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/addMember.do'\r\n");
      out.write("   onsubmit=\"return validateForm()\"  accept-charset=\"UTF-8\">\r\n");
      out.write("    <div class=\"member\">\r\n");
      out.write("        <!-- 목록 -->\r\n");
      out.write("       <div class=\"layout go-id\">\r\n");
      out.write("            <label for=\"id\">아이디</label>\r\n");
      out.write("            <input class= \"id\" type=\"text\" name=\"id\"  placeholder=\"아이디 입력\">\r\n");
      out.write("            <input class= \"idck\" type=\"button\" name=\"idck\" onclick=\"DupId()\" value=\"중복체크\" class=\"check-btn\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"layout\">\r\n");
      out.write("            <label for=\"pwd\">비밀번호</label>\r\n");
      out.write("            <input class=\"pw\" type=\"password\" name=\"pwd\" placeholder=\"비밀번호 입력\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"layout\">\r\n");
      out.write("            <label for=\"name\">이름</label>\r\n");
      out.write("            <input type=\"text\" name=\"name\"  placeholder=\"이름 입력\">\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("     		<!-- 생년월일 -->\r\n");
      out.write("         <div class=\"layout birth\">\r\n");
      out.write("            <label for=\"birth\">생년월일</label>\r\n");
      out.write("            <div>\r\n");
      out.write("                <input type=\"text\" placeholder=\"ex)19980627\" name=\"birthdate\">                \r\n");
      out.write("            </div>\r\n");
      out.write("        </div> \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <!-- 이메일 -->\r\n");
      out.write("      <div class=\"layout email\">\r\n");
      out.write("           <label for=\"email\">이메일</label>\r\n");
      out.write("            <input type=\"email\" name=\"email\"  placeholder=\"이메일 입력\">\r\n");
      out.write("            <input class= \"idck\" type=\"button\" name=\"emailck\" onclick=\"DupEmail()\" value=\"중복체크\" class=\"check-btn\">\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <!-- 번호 -->\r\n");
      out.write("        <div class=\"layout tel-number\">\r\n");
      out.write("            <label for=\"phone\">전화번호</label>\r\n");
      out.write("            <div>\r\n");
      out.write("                <input type=\"tel\" placeholder=\"전화번호 입력\" name=\"phone\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("       <div class=\"layout gender\">\r\n");
      out.write("            <label for=\"gender\">성별</label>\r\n");
      out.write("            <label>\r\n");
      out.write("                <input type=\"radio\" name=\"gender\" value=\"남성\" checked> 남자\r\n");
      out.write("            </label>\r\n");
      out.write("            <label>\r\n");
      out.write("                <input type=\"radio\" name=\"gender\" value=\"여성\"> 여자\r\n");
      out.write("            </label>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <input type=\"submit\" value=\"가입하기\">\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/member/JoinMember.jsp(7,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /WEB-INF/views/member/JoinMember.jsp(7,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/member/JoinMember.jsp(7,0) '${pageContext.request.contextPath }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }
}
